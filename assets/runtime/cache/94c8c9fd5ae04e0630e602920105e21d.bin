a:2:{i:0;a:3:{s:10:"sourceFile";s:64:"/var/www/html/plansys/components/ui/FormFields/RelationField.php";s:4:"file";a:1159:{i:0;s:5:"<?php";i:1;s:0:"";i:2;s:3:"/**";i:3;s:21:" * Class DropDownList";i:4;s:16:" * @author rizky";i:5;s:3:" */";i:6;s:39:"class RelationField extends FormField {";i:7;s:0:"";i:8;s:35:"    /** @var string $toolbarName */";i:9;s:50:"    public static $toolbarName = "Relation Field";";i:10;s:0:"";i:11;s:32:"    /** @var string $category */";i:12;s:47:"    public static $category = "User Interface";";i:13;s:0:"";i:14;s:35:"    /** @var string $toolbarIcon */";i:15;s:46:"    public static $toolbarIcon = "fa fa-link";";i:16;s:0:"";i:17;s:29:"    /** @var string $label */";i:18;s:23:"    public $label = '';";i:19;s:0:"";i:20;s:28:"    /** @var string $name */";i:21;s:34:"    public $name             = '';";i:22;s:32:"    public $relationCriteria = [";i:23;s:26:"        'select'    => '',";i:24;s:31:"        'distinct'  => 'false',";i:25;s:27:"        'alias'     => 't',";i:26;s:36:"        'condition' => '{[search]}',";i:27;s:26:"        'order'     => '',";i:28;s:26:"        'group'     => '',";i:29;s:26:"        'having'    => '',";i:30;s:25:"        'join'      => ''";i:31;s:6:"    ];";i:32;s:34:"    public $identifier       = '';";i:33;s:34:"    public $params           = [];";i:34;s:0:"";i:35;s:61:"    /** @var string $value digunakan pada function checked */";i:36;s:23:"    public $value = '';";i:37;s:0:"";i:38;s:30:"    /** @var array $options */";i:39;s:25:"    public $options = [];";i:40;s:0:"";i:41;s:35:"    /** @var array $fieldOptions */";i:42;s:30:"    public $fieldOptions = [];";i:43;s:0:"";i:44;s:35:"    /** @var array $labelOptions */";i:45;s:30:"    public $labelOptions = [];";i:46;s:0:"";i:47;s:28:"    /** @var string $list */";i:48;s:22:"    public $list = '';";i:49;s:0:"";i:50;s:68:"    /** @var string $listExpr digunakan pada function processExpr */";i:51;s:30:"    public $listExpr     = '';";i:52;s:32:"    public $includeEmpty = 'No';";i:53;s:30:"    public $emptyValue   = '';";i:54;s:40:"    public $emptyLabel   = '-- NONE --';";i:55;s:0:"";i:56;s:30:"    /** @var string $layout */";i:57;s:34:"    public $layout = 'Horizontal';";i:58;s:0:"";i:59;s:35:"    /** @var integer $labelWidth */";i:60;s:27:"    public $labelWidth = 4;";i:61;s:0:"";i:62;s:35:"    /** @var integer $fieldWidth */";i:63;s:27:"    public $fieldWidth = 8;";i:64;s:0:"";i:65;s:34:"    /** @var string $searchable */";i:66;s:30:"    public $searchable = 'No';";i:67;s:0:"";i:68;s:33:"    /** @var string $showOther */";i:69;s:32:"    public $showOther    = 'No';";i:70;s:32:"    public $showUnselect = 'No';";i:71;s:0:"";i:72;s:34:"    /** @var string $otherLabel */";i:73;s:35:"    public $otherLabel = 'Lainnya';";i:74;s:28:"    public $modelClass = '';";i:75;s:28:"    public $idField    = '';";i:76;s:28:"    public $labelField = '';";i:77;s:28:"    public $menuPos    = '';";i:78;s:24:"    public $queryParams;";i:79;s:0:"";i:80;s:61:"    public static function listModel($includeEmpty = false) {";i:81;s:60:"        $devDir = Yii::getPathOfAlias("application.models");";i:82;s:52:"        $appDir = Yii::getPathOfAlias("app.models");";i:83;s:0:"";i:84;s:62:"        $devItems = glob($devDir . DIRECTORY_SEPARATOR . "*");";i:85;s:62:"        $appItems = glob($appDir . DIRECTORY_SEPARATOR . "*");";i:86;s:0:"";i:87;s:20:"        $items = [];";i:88;s:0:"";i:89;s:28:"        if ($includeEmpty) {";i:90;s:40:"            $items[''] = ' -- NONE -- ';";i:91;s:9:"        }";i:92;s:0:"";i:93;s:41:"        foreach ($appItems as $k => $m) {";i:94;s:21:"            $mm = $m;";i:95;s:69:"            $m  = str_replace($appDir . DIRECTORY_SEPARATOR, "", $m);";i:96;s:46:"            $m  = str_replace('.php', "", $m);";i:97;s:30:"            if (is_dir($mm)) {";i:98;s:62:"                $dirs = glob($mm . DIRECTORY_SEPARATOR . "*");";i:99;s:45:"                foreach ($dirs as $d => $n) {";i:100;s:72:"                    $n = str_replace($mm . DIRECTORY_SEPARATOR, "", $n);";i:101;s:53:"                    $n = str_replace('.php', "", $n);";i:102;s:0:"";i:103;s:67:"                    $items[$m]['app.models.' . $m . "." . $n] = $n;";i:104;s:17:"                }";i:105;s:20:"            } else {";i:106;s:63:"                $items['Application']['app.models.' . $m] = $m;";i:107;s:13:"            }";i:108;s:9:"        }";i:109;s:0:"";i:110;s:41:"        foreach ($devItems as $k => $m) {";i:111;s:68:"            $m = str_replace($devDir . DIRECTORY_SEPARATOR, "", $m);";i:112;s:45:"            $m = str_replace('.php', "", $m);";i:113;s:0:"";i:114;s:63:"            $items['Plansys']['application.models.' . $m] = $m;";i:115;s:9:"        }";i:116;s:0:"";i:117;s:22:"        return $items;";i:118;s:5:"    }";i:119;s:0:"";i:120;s:7:"    /**";i:121;s:55:"     * @return array me-return array property DropDown.";i:122;s:7:"     */";i:123;s:42:"    public function getFieldProperties() {";i:124;s:21:"        return array(";i:125;s:18:"            array(";i:126;s:45:"                'label'      => 'Field Name',";i:127;s:39:"                'name'       => 'name',";i:128;s:38:"                'options'    => array(";i:129;s:49:"                    'ng-model'  => 'active.name',";i:130;s:56:"                    'ng-change' => 'changeActiveName()',";i:131;s:52:"                    'ps-list'   => 'modelFieldList',";i:132;s:18:"                ),";i:133;s:40:"                'list'       => array(),";i:134;s:38:"                'searchable' => 'Yes',";i:135;s:38:"                'showOther'  => 'Yes',";i:136;s:47:"                'type'       => 'DropDownList',";i:137;s:14:"            ),";i:138;s:18:"            array(";i:139;s:46:"                'label'      => 'Model Class',";i:140;s:45:"                'name'       => 'modelClass',";i:141;s:38:"                'options'    => array(";i:142;s:55:"                    'ng-model'  => 'active.modelClass',";i:143;s:69:"                    'ng-change' => 'generateRelationField();save();',";i:144;s:18:"                ),";i:145;s:45:"                'menuPos'    => 'pull-right',";i:146;s:61:"                'listExpr'   => 'RelationField::listModel()',";i:147;s:38:"                'searchable' => 'Yes',";i:148;s:47:"                'type'       => 'DropDownList',";i:149;s:14:"            ),";i:150;s:18:"            array(";i:151;s:43:"                'label'      => 'ID Field',";i:152;s:42:"                'name'       => 'idField',";i:153;s:38:"                'options'    => array(";i:154;s:52:"                    'ng-model'  => 'active.idField',";i:155;s:45:"                    'ng-change' => 'save();',";i:156;s:55:"                    'ps-list'   => 'relationFieldList',";i:157;s:18:"                ),";i:158;s:40:"                'list'       => array(),";i:159;s:38:"                'searchable' => 'Yes',";i:160;s:38:"                'showOther'  => 'Yes',";i:161;s:41:"                'otherLabel' => 'Custom',";i:162;s:47:"                'type'       => 'DropDownList',";i:163;s:14:"            ),";i:164;s:18:"            array(";i:165;s:46:"                'label'      => 'Label Field',";i:166;s:45:"                'name'       => 'labelField',";i:167;s:38:"                'options'    => array(";i:168;s:55:"                    'ng-model'  => 'active.labelField',";i:169;s:45:"                    'ng-change' => 'save();',";i:170;s:55:"                    'ps-list'   => 'relationFieldList',";i:171;s:18:"                ),";i:172;s:40:"                'list'       => array(),";i:173;s:38:"                'searchable' => 'Yes',";i:174;s:38:"                'showOther'  => 'Yes',";i:175;s:41:"                'otherLabel' => 'Custom',";i:176;s:47:"                'type'       => 'DropDownList',";i:177;s:14:"            ),";i:178;s:18:"            array(";i:179;s:48:"                'label'   => 'Field Identifier',";i:180;s:42:"                'name'    => 'identifier',";i:181;s:40:"                'prefix'  => 'js: rel.',";i:182;s:35:"                'options' => array(";i:183;s:55:"                    'ng-model'  => 'active.identifier',";i:184;s:45:"                    'ng-change' => 'save();',";i:185;s:41:"                    'ng-delay'  => '500',";i:186;s:18:"                ),";i:187;s:41:"                'type'    => 'TextField',";i:188;s:14:"            ),";i:189;s:18:"            array(";i:190;s:53:"                'name'         => 'relationCriteria',";i:191;s:49:"                'label'        => 'Sql Criteria',";i:192;s:43:"                'paramsField'  => 'params',";i:193;s:50:"                'baseClass'    => 'RelationField',";i:194;s:40:"                'options'      => array(";i:195;s:61:"                    'ng-model'  => 'active.relationCriteria',";i:196;s:45:"                    'ng-change' => 'save();',";i:197;s:18:"                ),";i:198;s:71:"                'modelClassJS' => 'RelationField/relation-criteria.js',";i:199;s:48:"                'type'         => 'SqlCriteria',";i:200;s:14:"            ),";i:201;s:18:"            array(";i:202;s:46:"                'label'   => 'Sql Parameters',";i:203;s:38:"                'name'    => 'params',";i:204;s:36:"                'show'    => 'Show',";i:205;s:35:"                'options' => array(";i:206;s:51:"                    'ng-model'  => 'active.params',";i:207;s:45:"                    'ng-change' => 'save();',";i:208;s:18:"                ),";i:209;s:44:"                'type'    => 'KeyValueGrid',";i:210;s:14:"            ),";i:211;s:18:"            array(";i:212;s:34:"                'type'  => 'Text',";i:213;s:35:"                'value' => '<hr/>',";i:214;s:14:"            ),";i:215;s:18:"            array(";i:216;s:48:"                'label'      => 'Include Empty',";i:217;s:47:"                'name'       => 'includeEmpty',";i:218;s:38:"                'options'    => array(";i:219;s:57:"                    'ng-model'  => 'active.includeEmpty',";i:220;s:45:"                    'ng-change' => 'save();',";i:221;s:18:"                ),";i:222;s:56:"                'listExpr'   => 'array(\'Yes\',\'No\')',";i:223;s:36:"                'fieldWidth' => '4',";i:224;s:47:"                'type'       => 'DropDownList',";i:225;s:14:"            ),";i:226;s:18:"            array(";i:227;s:43:"                'label'   => 'Empty Value',";i:228;s:42:"                'name'    => 'emptyValue',";i:229;s:35:"                'options' => array(";i:230;s:55:"                    'ng-model'  => 'active.emptyValue',";i:231;s:44:"                    'ng-change' => 'save()',";i:232;s:68:"                    'ng-show'   => 'active.includeEmpty == \'Yes\'',";i:233;s:41:"                    'ng-delay'  => '500',";i:234;s:18:"                ),";i:235;s:41:"                'type'    => 'TextField',";i:236;s:14:"            ),";i:237;s:18:"            array(";i:238;s:43:"                'label'   => 'Empty Label',";i:239;s:42:"                'name'    => 'emptyLabel',";i:240;s:35:"                'options' => array(";i:241;s:55:"                    'ng-model'  => 'active.emptyLabel',";i:242;s:44:"                    'ng-change' => 'save()',";i:243;s:68:"                    'ng-show'   => 'active.includeEmpty == \'Yes\'',";i:244;s:41:"                    'ng-delay'  => '500',";i:245;s:18:"                ),";i:246;s:41:"                'type'    => 'TextField',";i:247;s:14:"            ),";i:248;s:18:"            array(";i:249;s:34:"                'type'  => 'Text',";i:250;s:35:"                'value' => '<hr/>',";i:251;s:14:"            ),";i:252;s:18:"            array(";i:253;s:37:"                'label'   => 'Label',";i:254;s:37:"                'name'    => 'label',";i:255;s:35:"                'options' => array(";i:256;s:50:"                    'ng-model'  => 'active.label',";i:257;s:44:"                    'ng-change' => 'save()',";i:258;s:39:"                    'ng-delay'  => 500,";i:259;s:18:"                ),";i:260;s:41:"                'type'    => 'TextField',";i:261;s:14:"            ),";i:262;s:18:"            array(";i:263;s:41:"                'label'      => 'Layout',";i:264;s:41:"                'name'       => 'layout',";i:265;s:38:"                'options'    => array(";i:266;s:51:"                    'ng-model'  => 'active.layout',";i:267;s:45:"                    'ng-change' => 'save();',";i:268;s:18:"                ),";i:269;s:69:"                'listExpr'   => 'array(\'Horizontal\',\'Vertical\')',";i:270;s:36:"                'fieldWidth' => '6',";i:271;s:47:"                'type'       => 'DropDownList',";i:272;s:14:"            ),";i:273;s:18:"            array(";i:274;s:48:"                'label'      => 'Menu Position',";i:275;s:42:"                'name'       => 'menuPos',";i:276;s:38:"                'options'    => array(";i:277;s:52:"                    'ng-model'  => 'active.menuPos',";i:278;s:45:"                    'ng-change' => 'save();',";i:279;s:18:"                ),";i:280;s:77:"                'listExpr'   => '[\'\'=>\'Left\',\'pull-right\'=>\'Right\']',";i:281;s:36:"                'fieldWidth' => '4',";i:282;s:47:"                'type'       => 'DropDownList',";i:283;s:14:"            ),";i:284;s:18:"            array(";i:285;s:48:"                'label'      => 'Show Unselect',";i:286;s:47:"                'name'       => 'showUnselect',";i:287;s:38:"                'options'    => array(";i:288;s:57:"                    'ng-model'  => 'active.showUnselect',";i:289;s:45:"                    'ng-change' => 'save();',";i:290;s:18:"                ),";i:291;s:52:"                'listExpr'   => '[\'No\', \'Yes\']',";i:292;s:36:"                'fieldWidth' => '4',";i:293;s:47:"                'type'       => 'DropDownList',";i:294;s:14:"            ),";i:295;s:18:"            array(";i:296;s:34:"                'type'  => 'Text',";i:297;s:35:"                'value' => '<hr/>',";i:298;s:14:"            ),";i:299;s:18:"            array(";i:300;s:38:"                'totalColumns' => '4',";i:301;s:40:"                'column1'      => array(";i:302;s:26:"                    array(";i:303;s:42:"                        'type'  => 'Text',";i:304;s:79:"                        'value' => '<column-placeholder></column-placeholder>',";i:305;s:22:"                    ),";i:306;s:18:"                ),";i:307;s:40:"                'column2'      => array(";i:308;s:26:"                    array(";i:309;s:54:"                        'label'      => 'Label Width',";i:310;s:53:"                        'name'       => 'labelWidth',";i:311;s:51:"                        'layout'     => 'Vertical',";i:312;s:45:"                        'labelWidth' => '12',";i:313;s:45:"                        'fieldWidth' => '11',";i:314;s:46:"                        'options'    => array(";i:315;s:65:"                            'ng-model'    => 'active.labelWidth',";i:316;s:54:"                            'ng-change'   => 'save()',";i:317;s:49:"                            'ng-delay'    => 500,";i:318;s:77:"                            'ng-disabled' => 'active.layout == \'Vertical\'',";i:319;s:26:"                        ),";i:320;s:52:"                        'type'       => 'TextField',";i:321;s:22:"                    ),";i:322;s:26:"                    array(";i:323;s:42:"                        'type'  => 'Text',";i:324;s:79:"                        'value' => '<column-placeholder></column-placeholder>',";i:325;s:22:"                    ),";i:326;s:18:"                ),";i:327;s:40:"                'column3'      => array(";i:328;s:26:"                    array(";i:329;s:54:"                        'label'      => 'Field Width',";i:330;s:53:"                        'name'       => 'fieldWidth',";i:331;s:51:"                        'layout'     => 'Vertical',";i:332;s:45:"                        'labelWidth' => '12',";i:333;s:45:"                        'fieldWidth' => '11',";i:334;s:46:"                        'options'    => array(";i:335;s:63:"                            'ng-model'  => 'active.fieldWidth',";i:336;s:52:"                            'ng-change' => 'save()',";i:337;s:47:"                            'ng-delay'  => 500,";i:338;s:26:"                        ),";i:339;s:52:"                        'type'       => 'TextField',";i:340;s:22:"                    ),";i:341;s:26:"                    array(";i:342;s:42:"                        'type'  => 'Text',";i:343;s:79:"                        'value' => '<column-placeholder></column-placeholder>',";i:344;s:22:"                    ),";i:345;s:18:"                ),";i:346;s:40:"                'w1'           => '25%',";i:347;s:40:"                'w2'           => '25%',";i:348;s:40:"                'w3'           => '25%',";i:349;s:40:"                'w4'           => '25%',";i:350;s:48:"                'type'         => 'ColumnField',";i:351;s:14:"            ),";i:352;s:18:"            array(";i:353;s:37:"                'label' => 'Options',";i:354;s:37:"                'name'  => 'options',";i:355;s:42:"                'type'  => 'KeyValueGrid',";i:356;s:14:"            ),";i:357;s:18:"            array(";i:358;s:43:"                'label' => 'Label Options',";i:359;s:42:"                'name'  => 'labelOptions',";i:360;s:42:"                'type'  => 'KeyValueGrid',";i:361;s:14:"            ),";i:362;s:18:"            array(";i:363;s:43:"                'label' => 'Field Options',";i:364;s:42:"                'name'  => 'fieldOptions',";i:365;s:42:"                'type'  => 'KeyValueGrid',";i:366;s:14:"            ),";i:367;s:10:"        );";i:368;s:5:"    }";i:369;s:0:"";i:370;s:7:"    /**";i:371;s:63:"     * @return array me-return array javascript yang di-include";i:372;s:7:"     */";i:373;s:33:"    public function includeJS() {";i:374;s:37:"        return ['relation-field.js'];";i:375;s:5:"    }";i:376;s:0:"";i:377;s:37:"    public function actionDgrInit() {";i:378;s:53:"        $postdata = file_get_contents("php://input");";i:379;s:45:"        $post     = CJSON::decode($postdata);";i:380;s:0:"";i:381;s:30:"        if (count($post) == 0)";i:382;s:18:"            die();";i:383;s:0:"";i:384;s:19:"        $attr = [];";i:385;s:39:"        if (isset($post['model_id'])) {";i:386;s:44:"            $attr['id'] = $post['model_id'];";i:387;s:9:"        }";i:388;s:0:"";i:389;s:66:"        $fb            = FormBuilder::load($post['class'], $attr);";i:390;s:67:"        $ff            = $fb->findField(['name' => $post['name']]);";i:391;s:29:"        $this->builder = $fb;";i:392;s:28:"        $return        = [];";i:393;s:51:"        foreach ($post['cols'] as $alias => $ids) {";i:394;s:33:"            $return[$alias] = [];";i:395;s:35:"            $fc             = null;";i:396;s:46:"            foreach ($ff['columns'] as $ffc) {";i:397;s:81:"                if ($ffc['columnType'] == "relation" && $ffc['name'] == $alias) {";i:398;s:31:"                    $fc = $ffc;";i:399;s:26:"                    break;";i:400;s:17:"                }";i:401;s:13:"            }";i:402;s:32:"            if (!is_null($fc)) {";i:403;s:38:"                if (count($ids) > 0) {";i:404;s:67:"                    $this->modelClass       = $fc['relModelClass'];";i:405;s:64:"                    $this->idField          = $fc['relIdField'];";i:406;s:67:"                    $this->labelField       = $fc['relLabelField'];";i:407;s:66:"                    $this->relationCriteria = @$fc['relCriteria'];";i:408;s:64:"                    $this->params           = @$fc['relParams'];";i:409;s:48:"                    foreach ($ids as $k => $i) {";i:410;s:73:"                        $ids[$k] = (is_string($i) ? '"' . $i . '"' : $i);";i:411;s:21:"                    }";i:412;s:48:"                    $ids = implode(" , ", $ids);";i:413;s:0:"";i:414;s:62:"                    $this->relationCriteria['nolimit'] = true;";i:415;s:0:"";i:416;s:66:"                    if (@$this->relationCriteria['alias'] != "") {";i:417;s:86:"                        $id = $this->relationCriteria['alias'] . "." . $this->idField;";i:418;s:28:"                    } else {";i:419;s:45:"                        $id = $this->idField;";i:420;s:21:"                    }";i:421;s:0:"";i:422;s:70:"                    if (@$this->relationCriteria['condition'] != "") {";i:423;s:66:"                        $c = $this->relationCriteria['condition'];";i:424;s:76:"                        if (trim(str_replace("{[search]}", "", $c)) != '') {";i:425;s:74:"                            $c = "(" . $c . ") {AND} ({$id} IN ({$ids}))";";i:426;s:32:"                        } else {";i:427;s:55:"                            $c = "({$id} IN ({$ids}))";";i:428;s:25:"                        }";i:429;s:66:"                        $this->relationCriteria['condition'] = $c;";i:430;s:28:"                    } else {";i:431;s:85:"                        $this->relationCriteria['condition'] = "({$id} IN ({$ids}))";";i:432;s:21:"                    }";i:433;s:0:"";i:434;s:92:"                    $result = $this->query('', is_null($this->params) ? [] : $this->params);";i:435;s:0:"";i:436;s:51:"                    foreach ($result as $i => $r) {";i:437;s:50:"                        $return[$alias] = $result;";i:438;s:21:"                    }";i:439;s:17:"                }";i:440;s:13:"            }";i:441;s:9:"        }";i:442;s:34:"        echo json_encode($return);";i:443;s:5:"    }";i:444;s:0:"";i:445;s:74:"    public function query($search = '', $params = [], $initialID = null) {";i:446;s:39:"        Yii::import($this->modelClass);";i:447;s:0:"";i:448;s:61:"        $class = Helper::explodeLast(".", $this->modelClass);";i:449;s:34:"        if (!class_exists($class))";i:450;s:19:"            return;";i:451;s:0:"";i:452;s:31:"        $model    = new $class;";i:453;s:40:"        $table    = $model->tableName();";i:454;s:62:"        $criteria = $this->generateCriteria($search, $params);";i:455;s:52:"        $rawlist  = $model->currentModel($criteria);";i:456;s:0:"";i:457;s:55:"        if (!is_null($initialID) && $initialID != "") {";i:458;s:27:"            $found = false;";i:459;s:0:"";i:460;s:38:"            foreach ($rawlist as $r) {";i:461;s:49:"                if (!isset($r[$this->idField])) {";i:462;s:29:"                    continue;";i:463;s:17:"                }";i:464;s:0:"";i:465;s:53:"                if ($r[$this->idField] == $initialID)";i:466;s:34:"                    $found = true;";i:467;s:13:"            }";i:468;s:0:"";i:469;s:26:"            if (!$found) {";i:470;s:60:"                $t                     = $criteria['alias'];";i:471;s:82:"                $criteria['condition'] = "{$t}.{$this->idField} = '{$initialID}'";";i:472;s:73:"                $initial               = $model->currentModel($criteria);";i:473;s:0:"";i:474;s:39:"                if (!empty($initial)) {";i:475;s:45:"                    ## remove duplicate label";i:476;s:52:"                    foreach ($rawlist as $k => $r) {";i:477;s:124:"                        if (!is_null(@$r[$this->labelField]) && @$r[$this->labelField] == @$initial[0][$this->labelField]) {";i:478;s:48:"                            unset($rawlist[$k]);";i:479;s:25:"                        }";i:480;s:21:"                    }";i:481;s:0:"";i:482;s:63:"                    $rawlist = array_merge($rawlist, $initial);";i:483;s:17:"                }";i:484;s:13:"            }";i:485;s:9:"        }";i:486;s:0:"";i:487;s:19:"        $list = [];";i:488;s:40:"        foreach ($rawlist as $k => $i) {";i:489;s:29:"            $included = true;";i:490;s:28:"            if ($included) {";i:491;s:40:"                $field = array_keys($i);";i:492;s:0:"";i:493;s:55:"                if (in_array($this->idField, $field)) {";i:494;s:48:"                    $value = $i[$this->idField];";i:495;s:24:"                } else {";i:496;s:111:"                    $value = @$this->evaluate("\"" . str_replace("{", "{\$", $this->idField) . "\"", true, $i);";i:497;s:17:"                }";i:498;s:0:"";i:499;s:58:"                if (in_array($this->labelField, $field)) {";i:500;s:51:"                    $label = $i[$this->labelField];";i:501;s:24:"                } else {";i:502;s:114:"                    $label = @$this->evaluate("\"" . str_replace("{", "{\$", $this->labelField) . "\"", true, $i);";i:503;s:17:"                }";i:504;s:0:"";i:505;s:27:"                $list[] = [";i:506;s:38:"                    'value' => $value,";i:507;s:37:"                    'label' => $label";i:508;s:18:"                ];";i:509;s:13:"            }";i:510;s:9:"        }";i:511;s:0:"";i:512;s:43:"        if ($this->includeEmpty == 'Yes') {";i:513;s:35:"            if (count($list) > 0) {";i:514;s:38:"                array_unshift($list, [";i:515;s:37:"                    'value' => '---',";i:516;s:36:"                    'label' => '---'";i:517;s:19:"                ]);";i:518;s:13:"            }";i:519;s:34:"            array_unshift($list, [";i:520;s:45:"                'value' => $this->emptyValue,";i:521;s:44:"                'label' => $this->emptyLabel";i:522;s:15:"            ]);";i:523;s:9:"        }";i:524;s:0:"";i:525;s:28:"        $this->list = $list;";i:526;s:21:"        return $list;";i:527;s:5:"    }";i:528;s:0:"";i:529;s:56:"    public function generateCriteria($search, $params) {";i:530;s:64:"        $condition = $this->generateCondition($search, $params);";i:531;s:0:"";i:532;s:53:"        $nolimit                             = false;";i:533;s:65:"        $this->relationCriteria['condition'] = $condition["sql"];";i:534;s:0:"";i:535;s:103:"        $this->params = array_merge(is_null($this->params) ? [] : $this->params, $condition['params']);";i:536;s:100:"        $criteria     = DataSource::generateCriteria($this->params, $this->relationCriteria, $this);";i:537;s:0:"";i:538;s:34:"        ##clean criteria condition";i:539;s:44:"        if (isset($criteria['condition'])) {";i:540;s:64:"            if (stripos($criteria['condition'], "and ") === 0) {";i:541;s:75:"                $criteria['condition'] = substr($criteria['condition'], 4);";i:542;s:13:"            }";i:543;s:97:"            if (stripos($criteria['condition'], " and") === strlen($criteria['condition']) - 4) {";i:544;s:111:"                $criteria['condition'] = substr($criteria['condition'], 0, strlen($criteria['condition']) - 4);";i:545;s:13:"            }";i:546;s:63:"            if (stripos($criteria['condition'], "or ") === 0) {";i:547;s:75:"                $criteria['condition'] = substr($criteria['condition'], 3);";i:548;s:13:"            }";i:549;s:96:"            if (stripos($criteria['condition'], " or") === strlen($criteria['condition']) - 3) {";i:550;s:111:"                $criteria['condition'] = substr($criteria['condition'], 0, strlen($criteria['condition']) - 3);";i:551;s:13:"            }";i:552;s:9:"        }";i:553;s:0:"";i:554;s:50:"        if (array_key_exists('page', $criteria)) {";i:555;s:81:"            $start             = ($criteria['page'] - 1) * $criteria['pageSize'];";i:556;s:55:"            $pageSize          = $criteria['pageSize'];";i:557;s:43:"            $criteria['limit'] = $pageSize;";i:558;s:46:"            if (!isset($criteria['offset'])) {";i:559;s:45:"                $criteria['offset'] = $start;";i:560;s:13:"            }";i:561;s:0:"";i:562;s:41:"            unset($criteria['pageSize']);";i:563;s:37:"            unset($criteria['page']);";i:564;s:9:"        }";i:565;s:0:"";i:566;s:23:"        if ($nolimit) {";i:567;s:44:"            if (isset($criteria['limit'])) {";i:568;s:42:"                unset($criteria['limit']);";i:569;s:13:"            }";i:570;s:45:"            if (isset($criteria['offset'])) {";i:571;s:43:"                unset($criteria['offset']);";i:572;s:13:"            }";i:573;s:40:"            $criteria['nolimit'] = true;";i:574;s:9:"        }";i:575;s:0:"";i:576;s:30:"        ## softDelete behavior";i:577;s:42:"        $this->applySoftDelete($criteria);";i:578;s:0:"";i:579;s:25:"        return $criteria;";i:580;s:5:"    }";i:581;s:0:"";i:582;s:70:"    public function generateCondition($search = '', &$jsparams = []) {";i:583;s:50:"        $class  = explode(".", $this->modelClass);";i:584;s:30:"        $class  = end($class);";i:585;s:29:"        $model  = new $class;";i:586;s:51:"        $driver = $model->dbConnection->driverName;";i:587;s:8:"        ";i:588;s:97:"        $sql = @$this->relationCriteria['condition'] ? $this->relationCriteria['condition'] : "";";i:589;s:0:"";i:590;s:53:"        preg_match_all("/\[(.*?)\]/", $sql, $blocks);";i:591;s:66:"        preg_match_all("/\{(.*?)\}/", $this->labelField, $fields);";i:592;s:0:"";i:593;s:28:"        if ($search != '') {";i:594;s:41:"            if (count($fields[1]) == 0) {";i:595;s:49:"                $fields[1] = [$this->labelField];";i:596;s:20:"            } else {";i:597;s:72:"                $rf  = explode(",", @$this->relationCriteria['select']);";i:598;s:26:"                $als = [];";i:599;s:37:"                if (count($rf) > 0) {";i:600;s:49:"                    foreach ($rf as $key => $v) {";i:601;s:60:"                        if (stripos($v, " as ") !== false) {";i:602;s:53:"                            $t = explode(" as ", $v);";i:603;s:48:"                            if (count($t) < 2) {";i:604;s:63:"                                $t = preg_split("/ as /i", $v);";i:605;s:29:"                            }";i:606;s:60:"                            $als[trim($t[1])] = trim($t[0]);";i:607;s:25:"                        }";i:608;s:21:"                    }";i:609;s:17:"                }";i:610;s:52:"                foreach ($fields[1] as $key => $v) {";i:611;s:0:"";i:612;s:42:"                    if (isset($als[$v])) {";i:613;s:52:"                        $fields[1][$key] = $als[$v];";i:614;s:28:"                    } else {";i:615;s:56:"                        if (strpos($v, ".") !== false) {";i:616;s:50:"                            $fields[1][$key] = $v;";i:617;s:32:"                        } else {";i:618;s:91:"                            $fields[1][$key] = $this->relationCriteria['alias'] . "." . $v;";i:619;s:25:"                        }";i:620;s:21:"                    }";i:621;s:17:"                }";i:622;s:13:"            }";i:623;s:0:"";i:624;s:41:"            if (count($blocks[1]) == 0) {";i:625;s:40:"                $blocks[1] = ['search'];";i:626;s:46:"                $sql       = "where [search]";";i:627;s:13:"            }";i:628;s:9:"        }";i:629;s:0:"";i:630;s:30:"        ## generate parameters";i:631;s:21:"        $params = [];";i:632;s:46:"        foreach ($blocks[1] as $k => $block) {";i:633;s:23:"            $cond = '';";i:634;s:0:"";i:635;s:62:"            ## usage: "where [search]", [search] = search term";i:636;s:53:"            if (strpos($block, 'search') !== false) {";i:637;s:36:"                if ($search != '') {";i:638;s:67:"                    if (strpos($this->labelField, '{') !== false) {";i:639;s:67:"                        $alias  = $this->relationCriteria['alias'];";i:640;s:68:"                        $select = $this->relationCriteria['select'];";i:641;s:52:"                        $field  = $this->labelField;";i:642;s:0:"";i:643;s:51:"                        // generate translasi alias";i:644;s:36:"                        $x     = [];";i:645;s:55:"                        $trans = explode(',', $select);";i:646;s:54:"                        foreach ($trans as $k => $t) {";i:647;s:60:"                            $list  = explode(" ", trim($t));";i:648;s:56:"                            $li    = array_shift($list);";i:649;s:41:"                            $liOri = $li;";i:650;s:0:"";i:651;s:42:"                            $x[$li] = $li;";i:652;s:0:"";i:653;s:44:"                            // pemisah alias";i:654;s:52:"                            $ds = explode(".", $li);";i:655;s:49:"                            if (count($ds) > 1) {";i:656;s:70:"                                if (!isset($x[$ds[count($ds) - 1]])) {";i:657;s:66:"                                    $x[$ds[count($ds) - 1]] = $li;";i:658;s:33:"                                }";i:659;s:36:"                            } else {";i:660;s:76:"                                $x[$li]                = $alias . "." . $li;";i:661;s:76:"                                $x[$alias . '.' . $li] = $alias . '.' . $li;";i:662;s:29:"                            }";i:663;s:0:"";i:664;s:42:"                            // jika ada AS";i:665;s:51:"                            if (count($list) > 0) {";i:666;s:55:"                                $li = array_pop($list);";i:667;s:0:"";i:668;s:49:"                                //jika pake alias";i:669;s:53:"                                if (count($ds) > 1) {";i:670;s:53:"                                    $x[$li] = $liOri;";i:671;s:40:"                                } else {";i:672;s:68:"                                    $x[$li] = $alias . "." . $liOri;";i:673;s:33:"                                }";i:674;s:29:"                            }";i:675;s:25:"                        }";i:676;s:0:"";i:677;s:49:"                        // replace kurung kurawal";i:678;s:75:"                        preg_match_all("/\{(.*?)\}/", $field, $fieldArray);";i:679;s:40:"                        $hasil = $field;";i:680;s:0:"";i:681;s:62:"                        foreach ($fieldArray[0] as $k => $f) {";i:682;s:58:"                            if (@$x[$fieldArray[1][$k]]) {";i:683;s:50:"                                switch ($driver) {";i:684;s:47:"                                    case "oci":";i:685;s:141:"                                        $hasil = str_replace($f, '{LOWER(COALESCE(TO_CHAR(' . $x[$fieldArray[1][$k]] . '), \'\'))}', $hasil);";i:686;s:46:"                                        break;";i:687;s:44:"                                    default:";i:688;s:128:"                                        $hasil = str_replace($f, '{LOWER(IFNULL(' . $x[$fieldArray[1][$k]] . ', ""))}', $hasil);";i:689;s:33:"                                }";i:690;s:36:"                            } else {";i:691;s:50:"                                switch ($driver) {";i:692;s:47:"                                    case "oci":";i:693;s:137:"                                        $hasil = str_replace($f, '{LOWER(COALESCE(TO_CHAR(' . $fieldArray[1][$k] . '), \'\'))}', $hasil);";i:694;s:46:"                                        break;";i:695;s:44:"                                    default:";i:696;s:124:"                                        $hasil = str_replace($f, '{LOWER(IFNULL(' . $fieldArray[1][$k] . ', ""))}', $hasil);";i:697;s:33:"                                }";i:698;s:29:"                            }";i:699;s:25:"                        }";i:700;s:0:"";i:701;s:42:"                        switch ($driver) {";i:702;s:39:"                            case "oci":";i:703;s:75:"                                $hasil = str_replace('{', "' || ", $hasil);";i:704;s:75:"                                $hasil = str_replace('}', " || '", $hasil);";i:705;s:38:"                                break;";i:706;s:36:"                            default:";i:707;s:72:"                                $hasil = str_replace('{', "',", $hasil);";i:708;s:72:"                                $hasil = str_replace('}', ",'", $hasil);";i:709;s:25:"                        }";i:710;s:0:"";i:711;s:47:"                        if ($hasil[0] == "'") {";i:712;s:55:"                            $hasil = substr($hasil, 2);";i:713;s:32:"                        } else {";i:714;s:50:"                            $hasil = "'" . $hasil;";i:715;s:25:"                        }";i:716;s:64:"                        if ($hasil[strlen($hasil) - 1] == "'") {";i:717;s:75:"                            $hasil = substr($hasil, 0, strlen($hasil) - 2);";i:718;s:32:"                        } else {";i:719;s:50:"                            $hasil = $hasil . "'";";i:720;s:25:"                        }";i:721;s:0:"";i:722;s:42:"                        switch ($driver) {";i:723;s:39:"                            case "oci":";i:724;s:54:"                                $hasil = trim($hasil);";i:725;s:60:"                                $hasil = trim($hasil, "||");";i:726;s:83:"                                $sqlcond = $hasil . ' like ' . "LOWER([{$block}])";";i:727;s:38:"                                break;";i:728;s:36:"                            default:";i:729;s:101:"                                $sqlcond = "CONCAT(" . $hasil . ")" . ' like ' . "LOWER([{$block}])";";i:730;s:25:"                        }";i:731;s:28:"                    } else {";i:732;s:42:"                        switch ($driver) {";i:733;s:39:"                            case "oci":";i:734;s:151:"                                $sqlcond = "LOWER(|" . $this->relationCriteria['alias'] . "|.|" . $this->labelField . '|) like ' . "LOWER([{$block}])";";i:735;s:0:"";i:736;s:38:"                                break;";i:737;s:36:"                            default:";i:738;s:106:"                                $sqlcond = "LOWER(" . $this->labelField . ') like ' . "LOWER([{$block}])";";i:739;s:25:"                        }";i:740;s:21:"                    }";i:741;s:0:"";i:742;s:80:"                    $search         = preg_replace('!\s+!', '%', trim($search));";i:743;s:78:"                    $sql            = str_replace("[search]", $sqlcond, $sql);";i:744;s:52:"                    $params[$block] = "%{$search}%";";i:745;s:24:"                } else {";i:746;s:43:"                    $params[$block] = null;";i:747;s:17:"                }";i:748;s:91:"            } ## usage: "where user_id = {$model->id}",  $model = current form activerecord";i:749;s:58:"            else if (strpos($block, '$model') !== false) {";i:750;s:69:"                preg_match("/\\\$model->[\w_]+/", $block, $modelVar);";i:751;s:43:"                foreach ($modelVar as $v) {";i:752;s:61:"                    $val = $this->evaluate("\"{$v}\"", true);";i:753;s:37:"                    if ($val == '') {";i:754;s:35:"                        $cond = '';";i:755;s:28:"                    } else {";i:756;s:37:"                        $cond = $val;";i:757;s:21:"                    }";i:758;s:17:"                }";i:759;s:40:"                $params[$block] = $cond;";i:760;s:13:"            }";i:761;s:9:"        }";i:762;s:0:"";i:763;s:55:"        ## remove empty-valued conditional curly braces";i:764;s:54:"        preg_match_all("/\{(.*?)\}/", $sql, $curlies);";i:765;s:47:"        foreach ($curlies[0] as $c => $curly) {";i:766;s:43:"            foreach ($params as $k => $p) {";i:767;s:63:"                if (strpos($curly, '[' . $k . ']') !== false) {";i:768;s:30:"                    if (!$p) {";i:769;s:61:"                        $sql = str_replace($curly, '', $sql);";i:770;s:43:"                        unset($params[$k]);";i:771;s:28:"                    } else {";i:772;s:74:"                        $sql = str_replace($curly, $curlies[1][$c], $sql);";i:773;s:21:"                    }";i:774;s:17:"                }";i:775;s:13:"            }";i:776;s:9:"        }";i:777;s:0:"";i:778;s:30:"        ## assemble parameters";i:779;s:26:"        $i            = 0;";i:780;s:27:"        $returnParams = [];";i:781;s:39:"        foreach ($params as $k => $p) {";i:782;s:59:"            $returnParams[':param_' . $i] = "'" . $p . "'";";i:783;s:94:"            $sql                          = str_replace('[' . $k . ']', ':param_' . $i, $sql);";i:784;s:17:"            $i++;";i:785;s:9:"        }";i:786;s:62:"        $returnParams = array_merge($returnParams, $jsparams);";i:787;s:0:"";i:788;s:27:"        ## trim and or, etc";i:789;s:16:"        return [";i:790;s:29:"            'sql'    => $sql,";i:791;s:37:"            'params' => $returnParams";i:792;s:10:"        ];";i:793;s:5:"    }";i:794;s:0:"";i:795;s:39:"    public function actionDgrSearch() {";i:796;s:53:"        $postdata = file_get_contents("php://input");";i:797;s:45:"        $post     = CJSON::decode($postdata);";i:798;s:0:"";i:799;s:16:"        $s = '';";i:800;s:16:"        $m = '';";i:801;s:16:"        $f = '';";i:802;s:23:"        extract($post);";i:803;s:0:"";i:804;s:39:"        $fb    = FormBuilder::load($m);";i:805;s:48:"        $field = $fb->findField(['name' => $f]);";i:806;s:0:"";i:807;s:48:"        foreach ($field['columns'] as $column) {";i:808;s:40:"            if ($c == $column['name']) {";i:809;s:68:"                $this->modelClass       = @$column['relModelClass'];";i:810;s:65:"                $this->idField          = @$column['relIdField'];";i:811;s:68:"                $this->labelField       = @$column['relLabelField'];";i:812;s:66:"                $this->relationCriteria = @$column['relCriteria'];";i:813;s:101:"                $this->params           = is_null(@$column['relParams']) ? [] : $column['relParams'];";i:814;s:0:"";i:815;s:47:"                if (is_array(@$this->params)) {";i:816;s:58:"                    foreach ($this->params as $k => $ff) {";i:817;s:74:"                        if (substr($ff, 0, 3) == "js:" && isset($p[$k])) {";i:818;s:52:"                            if (is_string($p[$k])) {";i:819;s:71:"                                $this->params[$k] = "'" . $p[$k] . "'";";i:820;s:29:"                            }";i:821;s:25:"                        }";i:822;s:21:"                    }";i:823;s:17:"                }";i:824;s:13:"            }";i:825;s:9:"        }";i:826;s:29:"        $this->builder = $fb;";i:827;s:59:"        echo json_encode($this->query(@$s, $this->params));";i:828;s:5:"    }";i:829;s:0:"";i:830;s:51:"    public function actionGetDetail($m, $id, $fd) {";i:831;s:34:"        if (strpos($m, ".") > 0) {";i:832;s:28:"            Yii::import($m);";i:833;s:46:"            $m = Helper::explodeLast(".", $m);";i:834;s:9:"        }";i:835;s:0:"";i:836;s:31:"        if (class_exists($m)) {";i:837;s:64:"            $data = $m::model()->findByAttributes([$fd => $id]);";i:838;s:38:"            $data->loadAllRelations();";i:839;s:48:"            echo json_encode($data->attributes);";i:840;s:9:"        }";i:841;s:5:"    }";i:842;s:0:"";i:843;s:36:"    public function actionFindId() {";i:844;s:53:"        $postdata = file_get_contents("php://input");";i:845;s:45:"        $post     = CJSON::decode($postdata);";i:846;s:31:"        if (!is_array($post)) {";i:847;s:19:"            return;";i:848;s:9:"        }";i:849;s:0:"";i:850;s:16:"        $m = '';";i:851;s:16:"        $f = '';";i:852;s:16:"        $v = '';";i:853;s:16:"        $s = '';";i:854;s:16:"        $p = '';";i:855;s:23:"        extract($post);";i:856;s:0:"";i:857;s:36:"        $fb = FormBuilder::load($m);";i:858;s:24:"        if (isset($i)) {";i:859;s:73:"            $field = $fb->findField(['name' => $f, 'identifier' => @$i]);";i:860;s:16:"        } else {";i:861;s:52:"            $field = $fb->findField(['name' => $f]);";i:862;s:9:"        }";i:863;s:0:"";i:864;s:35:"        $this->attributes = $field;";i:865;s:32:"        $this->builder    = $fb;";i:866;s:0:"";i:867;s:34:"        if (@$field['criteria']) {";i:868;s:58:"            $this->relationCriteria = @$field['criteria'];";i:869;s:9:"        }";i:870;s:0:"";i:871;s:42:"        if (is_array(@$field['params'])) {";i:872;s:53:"            foreach ($field['params'] as $k => $ff) {";i:873;s:66:"                if (substr($ff, 0, 3) == "js:" && isset($p[$k])) {";i:874;s:44:"                    if (is_string($p[$k])) {";i:875;s:52:"                        $p[$k] = "'" . $p[$k] . "'";";i:876;s:21:"                    }";i:877;s:17:"                }";i:878;s:13:"            }";i:879;s:9:"        }";i:880;s:0:"";i:881;s:0:"";i:882;s:140:"        $this->relationCriteria['condition'] = $this->relationCriteria['alias'] . "." . $this->idField . " = :find_id_param_relation_field";";i:883;s:66:"        $p[':find_id_param_relation_field']  = "php:'" . $v . "'";";i:884;s:0:"";i:885;s:39:"        $result = $this->query($s, $p);";i:886;s:55:"        echo json_encode(@$result[count($result) - 1]);";i:887;s:5:"    }";i:888;s:0:"";i:889;s:50:"    private function applySoftDelete(&$criteria) {";i:890;s:39:"        Yii::import($this->modelClass);";i:891;s:64:"        $relClass = Helper::explodeLast(".", $this->modelClass);";i:892;s:37:"        if (!class_exists($relClass))";i:893;s:19:"            return;";i:894;s:0:"";i:895;s:46:"        $sd = $relClass::model()->_softDelete;";i:896;s:26:"        if (!empty($sd)) {";i:897;s:25:"            $prefix = '';";i:898;s:44:"            if (@$criteria['alias'] != '') {";i:899;s:51:"                $prefix = $criteria['alias'] . '.';";i:900;s:13:"            }";i:901;s:0:"";i:902;s:49:"            if (!isset($criteria['condition'])) {";i:903;s:44:"                $criteria['condition'] = '';";i:904;s:44:"                $and                   = '';";i:905;s:20:"            } else {";i:906;s:31:"                $and = ' AND ';";i:907;s:13:"            }";i:908;s:0:"";i:909;s:92:"            $criteria['condition'] .= "{$and} {$prefix}{$sd['column']} <> '{$sd['value']}'";";i:910;s:9:"        }";i:911;s:5:"    }";i:912;s:0:"";i:913;s:36:"    public function actionSearch() {";i:914;s:53:"        $postdata = file_get_contents("php://input");";i:915;s:45:"        $post     = CJSON::decode($postdata);";i:916;s:31:"        if (!is_array($post)) {";i:917;s:19:"            return;";i:918;s:9:"        }";i:919;s:0:"";i:920;s:16:"        $m = '';";i:921;s:16:"        $f = '';";i:922;s:16:"        $v = '';";i:923;s:16:"        $s = '';";i:924;s:16:"        $p = '';";i:925;s:23:"        extract($post);";i:926;s:0:"";i:927;s:36:"        $fb = FormBuilder::load($m);";i:928;s:24:"        if (isset($i)) {";i:929;s:73:"            $field = $fb->findField(['name' => $f, 'identifier' => @$i]);";i:930;s:16:"        } else {";i:931;s:52:"            $field = $fb->findField(['name' => $f]);";i:932;s:9:"        }";i:933;s:0:"";i:934;s:0:"";i:935;s:35:"        $this->attributes = $field;";i:936;s:32:"        $this->builder    = $fb;";i:937;s:0:"";i:938;s:34:"        if (@$field['criteria']) {";i:939;s:58:"            $this->relationCriteria = @$field['criteria'];";i:940;s:9:"        }";i:941;s:76:"        $this->relationCriteria['limit']  = ActiveRecord::DEFAULT_PAGE_SIZE;";i:942;s:46:"        $this->relationCriteria['offset'] = 0;";i:943;s:28:"        if (isset($start)) {";i:944;s:53:"            $this->includeEmpty               = 'No';";i:945;s:55:"            $this->relationCriteria['offset'] = $start;";i:946;s:9:"        }";i:947;s:0:"";i:948;s:38:"        if ($this->modelClass == '') {";i:949;s:35:"            $this->modelClass = $m;";i:950;s:9:"        }";i:951;s:0:"";i:952;s:42:"        if (is_array(@$field['params'])) {";i:953;s:53:"            foreach ($field['params'] as $k => $ff) {";i:954;s:66:"                if (substr($ff, 0, 3) == "js:" && isset($p[$k])) {";i:955;s:44:"                    if (is_string($p[$k])) {";i:956;s:52:"                        $p[$k] = "'" . $p[$k] . "'";";i:957;s:21:"                    }";i:958;s:17:"                }";i:959;s:13:"            }";i:960;s:9:"        }";i:961;s:0:"";i:962;s:26:"        echo json_encode([";i:963;s:44:"            'list'  => $this->query($s, $p),";i:964;s:43:"            'count' => $this->count($s, $p)";i:965;s:11:"        ]);";i:966;s:5:"    }";i:967;s:0:"";i:968;s:55:"    public function count($search = '', $params = []) {";i:969;s:39:"        Yii::import($this->modelClass);";i:970;s:0:"";i:971;s:61:"        $class = Helper::explodeLast(".", $this->modelClass);";i:972;s:34:"        if (!class_exists($class))";i:973;s:19:"            return;";i:974;s:0:"";i:975;s:34:"        $model       = new $class;";i:976;s:43:"        $tableSchema = $model->tableSchema;";i:977;s:46:"        $builder     = $model->commandBuilder;";i:978;s:65:"        $criteria    = $this->generateCriteria($search, $params);";i:979;s:98:"        $validSelect = (isset($criteria['select']) && strpos($criteria['select'], ',') === false);";i:980;s:0:"";i:981;s:36:"        if ($criteria['distinct']) {";i:982;s:42:"            $criteria['distinct'] = false;";i:983;s:0:"";i:984;s:31:"            if ($validSelect) {";i:985;s:84:"                $criteria['select'] = 'COUNT(DISTINCT ' . $criteria['select'] . ')';";i:986;s:20:"            } else {";i:987;s:49:"                $criteria['select'] = 'COUNT(1)';";i:988;s:13:"            }";i:989;s:9:"        }";i:990;s:0:"";i:991;s:39:"        if (isset($criteria['paging']))";i:992;s:39:"            unset($criteria['paging']);";i:993;s:0:"";i:994;s:37:"        if (isset($criteria['page']))";i:995;s:37:"            unset($criteria['page']);";i:996;s:0:"";i:997;s:41:"        if (isset($criteria['pageSize']))";i:998;s:41:"            unset($criteria['pageSize']);";i:999;s:0:"";i:1000;s:38:"        if (isset($criteria['limit']))";i:1001;s:38:"            unset($criteria['limit']);";i:1002;s:0:"";i:1003;s:39:"        if (isset($criteria['offset']))";i:1004;s:39:"            unset($criteria['offset']);";i:1005;s:0:"";i:1006;s:42:"        $this->applySoftDelete($criteria);";i:1007;s:95:"        $countCommand = $builder->createCountCommand($tableSchema, new CDbCriteria($criteria));";i:1008;s:53:"        $count        = $countCommand->queryScalar();";i:1009;s:0:"";i:1010;s:22:"        return $count;";i:1011;s:5:"    }";i:1012;s:0:"";i:1013;s:44:"    public function actionlistFieldByRel() {";i:1014;s:49:"        if (!@$_GET['class'] && !@$_GET['rel']) {";i:1015;s:33:"            echo json_encode([]);";i:1016;s:18:"            die();";i:1017;s:9:"        }";i:1018;s:0:"";i:1019;s:32:"        $class = $_GET['class'];";i:1020;s:28:"        Yii::import($class);";i:1021;s:50:"        $class = Helper::explodeLast(".", $class);";i:1022;s:28:"        $model = new $class;";i:1023;s:0:"";i:1024;s:63:"        if (isset($model->metaData->relations[$_GET['rel']])) {";i:1025;s:66:"            $rel      = $model->metaData->relations[$_GET['rel']];";i:1026;s:40:"            $relClass = $rel->className;";i:1027;s:43:"            $relModel = $relClass::model();";i:1028;s:0:"";i:1029;s:55:"            $data = $relModel::model()->attributesList;";i:1030;s:38:"            unset($data['Relations']);";i:1031;s:39:"            unset($data['Properties']);";i:1032;s:36:"            echo json_encode($data);";i:1033;s:16:"        } else {";i:1034;s:33:"            echo json_encode([]);";i:1035;s:18:"            die();";i:1036;s:9:"        }";i:1037;s:5:"    }";i:1038;s:0:"";i:1039;s:39:"    public function actionListField() {";i:1040;s:31:"        if (!@$_GET['class']) {";i:1041;s:33:"            echo json_encode([]);";i:1042;s:18:"            die();";i:1043;s:9:"        }";i:1044;s:0:"";i:1045;s:32:"        $class = $_GET['class'];";i:1046;s:0:"";i:1047;s:28:"        Yii::import($class);";i:1048;s:50:"        $class = Helper::explodeLast(".", $class);";i:1049;s:28:"        $model = new $class;";i:1050;s:20:"        $data  = [];";i:1051;s:53:"        if (is_subclass_of($model, 'ActiveRecord')) {";i:1052;s:39:"            $formType = "ActiveRecord";";i:1053;s:56:"            $data     = $class::model()->attributesList;";i:1054;s:38:"            unset($data['Relations']);";i:1055;s:39:"            unset($data['Properties']);";i:1056;s:57:"        } else if (is_subclass_of($model, 'FormField')) {";i:1057;s:36:"            $formType = "FormField";";i:1058;s:35:"            $mf       = new $class;";i:1059;s:40:"            $data     = $mf->attributes;";i:1060;s:33:"            unset($data['type']);";i:1061;s:52:"        } else if (is_subclass_of($model, 'Form')) {";i:1062;s:31:"            $formType = "Form";";i:1063;s:35:"            $mf       = new $class;";i:1064;s:40:"            $data     = $mf->attributes;";i:1065;s:33:"            unset($data['type']);";i:1066;s:9:"        }";i:1067;s:0:"";i:1068;s:32:"        echo json_encode($data);";i:1069;s:5:"    }";i:1070;s:0:"";i:1071;s:7:"    /**";i:1072;s:14:"     * checked";i:1073;s:49:"     * Fungsi ini untuk mengecek value dari field";i:1074;s:27:"     * @param string $value";i:1075;s:48:"     * @return boolean me-return true atau false";i:1076;s:7:"     */";i:1077;s:37:"    public function checked($value) {";i:1078;s:35:"        if ($this->value == $value)";i:1079;s:24:"            return true;";i:1080;s:12:"        else";i:1081;s:25:"            return false;";i:1082;s:5:"    }";i:1083;s:0:"";i:1084;s:7:"    /**";i:1085;s:21:"     * getLayoutClass";i:1086;s:89:"     * Fungsi ini akan mengecek nilai property $layout untuk menentukan nama Class Layout";i:1087;s:66:"     * @return string me-return string Class layout yang digunakan";i:1088;s:7:"     */";i:1089;s:38:"    public function getLayoutClass() {";i:1090;s:68:"        return ($this->layout == 'Vertical' ? 'form-vertical' : '');";i:1091;s:5:"    }";i:1092;s:0:"";i:1093;s:7:"    /**";i:1094;s:103:"     * @return string me-return string Class error jika terdapat error pada satu atau banyak attribute.";i:1095;s:7:"     */";i:1096;s:37:"    public function getErrorClass() {";i:1097;s:74:"        return (count($this->errors) > 0 ? 'has-error has-feedback' : '');";i:1098;s:5:"    }";i:1099;s:0:"";i:1100;s:7:"    /**";i:1101;s:20:"     * getlabelClass";i:1102;s:78:"     * Fungsi ini akan mengecek $layout untuk menentukan layout yang digunakan";i:1103;s:58:"     * dan meload option label dari property $labelOptions";i:1104;s:50:"     * @return string me-return string Class label";i:1105;s:7:"     */";i:1106;s:37:"    public function getlabelClass() {";i:1107;s:42:"        if ($this->layout == 'Vertical') {";i:1108;s:47:"            $class = "control-label col-sm-12";";i:1109;s:16:"        } else {";i:1110;s:64:"            $class = "control-label col-sm-{$this->labelWidth}";";i:1111;s:9:"        }";i:1112;s:0:"";i:1113;s:48:"        $class .= @$this->labelOptions['class'];";i:1114;s:22:"        return $class;";i:1115;s:5:"    }";i:1116;s:0:"";i:1117;s:7:"    /**";i:1118;s:23:"     * getFieldColClass";i:1119;s:45:"     * Fungsi ini untuk menetukan width field";i:1120;s:44:"     * @return string me-return string class";i:1121;s:7:"     */";i:1122;s:40:"    public function getFieldColClass() {";i:1123;s:45:"        return "col-sm-" . $this->fieldWidth;";i:1124;s:5:"    }";i:1125;s:0:"";i:1126;s:7:"    /**";i:1127;s:44:"     * @return string me-return string class";i:1128;s:7:"     */";i:1129;s:37:"    public function getFieldClass() {";i:1130;s:37:"        return "btn-group btn-block";";i:1131;s:5:"    }";i:1132;s:0:"";i:1133;s:7:"    /**";i:1134;s:13:"     * render";i:1135;s:54:"     * Fungsi ini untuk me-render field dan atributnya";i:1136;s:74:"     * @return mixed me-return sebuah field DropDownList dari hasil render";i:1137;s:7:"     */";i:1138;s:30:"    public function render() {";i:1139;s:63:"        $this->addClass('form-group form-group-sm', 'options');";i:1140;s:55:"        $this->addClass($this->layoutClass, 'options');";i:1141;s:54:"        $this->addClass($this->errorClass, 'options');";i:1142;s:0:"";i:1143;s:99:"        $this->addClass('btn dropdown-toggle btn-sm btn-block btn-dropdown-field', 'fieldOptions');";i:1144;s:96:"        $btn_class = ['btn-primary', 'btn-default', 'btn-success', 'btn-danger', 'btn-warning'];";i:1145;s:66:"        if (!in_array($this->fieldOptions['class'], $btn_class)) {";i:1146;s:59:"            $this->addClass('btn-default', 'fieldOptions');";i:1147;s:9:"        }";i:1148;s:70:"        $this->fieldOptions['ng-init'] = 'initScopeItem(this,$index)';";i:1149;s:94:"        $this->setDefaultOption('ng-model', "model['{$this->originalName}']", $this->options);";i:1150;s:0:"";i:1151;s:76:"        $this->relationCriteria['limit']  = ActiveRecord::DEFAULT_PAGE_SIZE;";i:1152;s:48:"        $this->relationCriteria['offset'] = '0';";i:1153;s:43:"        $this->query('', [], $this->value);";i:1154;s:0:"";i:1155;s:60:"        return $this->renderInternal('template_render.php');";i:1156;s:5:"    }";i:1157;s:0:"";i:1158;s:1:"}";}s:7:"methods";a:22:{s:9:"listModel";a:2:{s:4:"line";i:80;s:6:"length";i:39;}s:18:"getFieldProperties";a:2:{s:4:"line";i:123;s:6:"length";i:246;}s:9:"includeJS";a:2:{s:4:"line";i:373;s:6:"length";i:3;}s:13:"actionDgrInit";a:2:{s:4:"line";i:377;s:6:"length";i:67;}s:5:"query";a:2:{s:4:"line";i:445;s:6:"length";i:83;}s:16:"generateCriteria";a:2:{s:4:"line";i:529;s:6:"length";i:52;}s:17:"generateCondition";a:2:{s:4:"line";i:582;s:6:"length";i:212;}s:15:"actionDgrSearch";a:2:{s:4:"line";i:795;s:6:"length";i:34;}s:15:"actionGetDetail";a:2:{s:4:"line";i:830;s:6:"length";i:12;}s:12:"actionFindId";a:2:{s:4:"line";i:843;s:6:"length";i:45;}s:15:"applySoftDelete";a:2:{s:4:"line";i:889;s:6:"length";i:23;}s:12:"actionSearch";a:2:{s:4:"line";i:913;s:6:"length";i:54;}s:5:"count";a:2:{s:4:"line";i:968;s:6:"length";i:44;}s:20:"actionlistFieldByRel";a:2:{s:4:"line";i:1013;s:6:"length";i:25;}s:15:"actionListField";a:2:{s:4:"line";i:1039;s:6:"length";i:31;}s:7:"checked";a:2:{s:4:"line";i:1077;s:6:"length";i:6;}s:14:"getLayoutClass";a:2:{s:4:"line";i:1089;s:6:"length";i:3;}s:13:"getErrorClass";a:2:{s:4:"line";i:1096;s:6:"length";i:3;}s:13:"getlabelClass";a:2:{s:4:"line";i:1106;s:6:"length";i:10;}s:16:"getFieldColClass";a:2:{s:4:"line";i:1122;s:6:"length";i:3;}s:13:"getFieldClass";a:2:{s:4:"line";i:1129;s:6:"length";i:3;}s:6:"render";a:2:{s:4:"line";i:1138;s:6:"length";i:19;}}}i:1;N;}