a:2:{i:0;a:3:{s:10:"sourceFile";s:59:"/var/www/html/plansys/components/ui/FormFields/GridView.php";s:4:"file";a:700:{i:0;s:5:"<?php";i:1;s:0:"";i:2;s:35:"use Box\Spout\Writer\WriterFactory;";i:3;s:26:"use Box\Spout\Common\Type;";i:4;s:34:"class GridView extends FormField {";i:5;s:0:"";i:6;s:45:"    public static $toolbarName  = "GridView";";i:7;s:50:"    public static $category     = "Data & Tables";";i:8;s:48:"    public static $toolbarIcon  = "fa fa-table";";i:9;s:41:"    public        $type         = 'Grid';";i:10;s:37:"    public        $name         = '';";i:11;s:43:"    public        $mode         = 'normal';";i:12;s:37:"    public        $label        = '';";i:13;s:45:"    public        $layout       = 'Vertical';";i:14;s:36:"    public        $labelWidth   = 4;";i:15;s:36:"    public        $fieldWidth   = 8;";i:16;s:37:"    public        $options      = [];";i:17;s:37:"    public        $tableOptions = [];";i:18;s:37:"    public        $datasource   = '';";i:19;s:37:"    public        $gridOptions  = [];";i:20;s:37:"    public        $genOptions   = [];";i:21;s:37:"    public        $columns      = [];";i:22;s:37:"    public        $columnsFunc  = "";";i:23;s:42:"    public        $columnsFuncParams = [];";i:24;s:40:"    public        $hasEditable  = false;";i:25;s:0:"";i:26;s:43:"    public function actionDownloadExcel() {";i:27;s:53:"        $postdata = file_get_contents("php://input");";i:28;s:45:"        $post     = CJSON::decode($postdata);";i:29;s:35:"        if (isset($post['rows'])) {";i:30;s:56:"            $writer = WriterFactory::create(Type::XLSX);";i:31;s:68:"            $dir = Yii::getPathOfAlias('root.assets.gvExport') ."/";";i:32;s:32:"            if (!is_dir($dir)) {";i:33;s:40:"                mkdir($dir, 0755, true);";i:34;s:34:"                chmod($dir, 0755);";i:35;s:13:"            }";i:36;s:47:"            $file = "export-". time() .".xlsx";";i:37;s:85:"            $writer->openToFile($dir . $file); // stream data directly to the browser";i:38;s:75:"            $writer->addRows($post['rows']); // add multiple rows at a time";i:39;s:29:"            $writer->close();";i:40;s:67:"            echo Yii::app()->baseUrl . '/assets/gvExport/' . $file;";i:41;s:9:"        }";i:42;s:8:"        ";i:43;s:5:"    }";i:44;s:0:"";i:45;s:52:"    public function actionTemplate($n, $c, $k, $p) {";i:46;s:36:"        $fb = FormBuilder::load($c);";i:47;s:45:"        $ff = $fb->findField(['name' => $n]);";i:48;s:32:"        $this->attributes = $ff;";i:49;s:52:"        $this->prepareRender(json_decode($p, true));";i:50;s:47:"        include("GridView/template_table.php");";i:51;s:5:"    }";i:52;s:0:"";i:53;s:40:"    public function actionEditHeader() {";i:54;s:97:"        Asset::registerCSS(['application.components.ui.FormFields.GridView.grid-header-editor']);";i:55;s:69:"        Yii::app()->controller->renderForm('GridViewHeader',null,[],[";i:56;s:39:"            'layout'=>'//layouts/blank'";i:57;s:15:"        ]);    ";i:58;s:5:"    }";i:59;s:4:"    ";i:60;s:37:"    public function getErrorClass() {";i:61;s:74:"        return (count($this->errors) > 0 ? 'has-error has-feedback' : '');";i:62;s:5:"    }";i:63;s:0:"";i:64;s:34:"    public function includeCSS() {";i:65;s:28:"        return ['grid.css'];";i:66;s:5:"    }";i:67;s:0:"";i:68;s:33:"    public function includeJS() {";i:69;s:30:"        return ['grid.v1.js'];";i:70;s:5:"    }";i:71;s:0:"";i:72;s:56:"    public function prepareRender($overideParams = []) {";i:73;s:32:"        $this->processColumns();";i:74;s:8:"        ";i:75;s:39:"        if ($this->columnsFunc != '') {";i:76;s:54:"            foreach ($this->columns as $idx => $col) {";i:77;s:76:"                $this->getHeaderTemplate($this->columns[$idx], $idx, 'tag');";i:78;s:13:"            }";i:79;s:12:"            ";i:80;s:25:"            $params = [];";i:81;s:58:"            foreach ($this->columnsFuncParams as $k=>$p) {";i:82;s:47:"                if (strpos($p, 'php:') === 0) {";i:83;s:65:"                    $params[$k] = $this->evaluateExpression($p, [";i:84;s:52:"                        'columns' => $this->columns,";i:85;s:81:"                        'data' => @$GLOBALS['dataSourceCache'][$this->datasource]";i:86;s:23:"                    ]);";i:87;s:17:"                }";i:88;s:13:"            }";i:89;s:12:"            ";i:90;s:48:"            foreach ($overideParams as $k=>$p) {";i:91;s:33:"                $params[$k] = $p;";i:92;s:13:"            }";i:93;s:12:"            ";i:94;s:76:"            $this->columns = $this->evaluateExpression($this->columnsFunc, [";i:95;s:44:"                'columns' => $this->columns,";i:96;s:36:"                'params' => $params,";i:97;s:73:"                'data' => @$GLOBALS['dataSourceCache'][$this->datasource]";i:98;s:15:"            ]);";i:99;s:9:"        }";i:100;s:8:"        ";i:101;s:44:"        foreach ($this->columns as $k=>$c) {";i:102;s:43:"            if (!isset($c['columnType'])) {";i:103;s:60:"                $this->columns[$k]['columnType'] = 'string';";i:104;s:13:"            }";i:105;s:9:"        }";i:106;s:5:"    }";i:107;s:0:"";i:108;s:30:"    public function render() {";i:109;s:31:"        $this->prepareRender();";i:110;s:60:"        return $this->renderInternal('template_render.php');";i:111;s:5:"    }";i:112;s:0:"";i:113;s:39:"    private function processColumns() {";i:114;s:46:"        foreach ($this->columns as $k => $c) {";i:115;s:64:"            $this->columns[$k] = $this->processSingleColumn($c);";i:116;s:9:"        }";i:117;s:5:"    }";i:118;s:0:"";i:119;s:46:"    private function processSingleColumn($c) {";i:120;s:41:"        $name = explode(".", $c['name']);";i:121;s:31:"        if (count($name) > 1) {";i:122;s:41:"            $c['fieldName'] = $c['name'];";i:123;s:47:"            $c['name']      = array_pop($name);";i:124;s:9:"        }";i:125;s:8:"        ";i:126;s:94:"        if (isset($c['options']['mode']) && strpos($c['options']['mode'], "editable") === 0) {";i:127;s:38:"            $this->hasEditable = true;";i:128;s:9:"        }";i:129;s:8:"        ";i:130;s:42:"        $c['options']['sortable'] = false;";i:131;s:0:"";i:132;s:18:"        return $c;";i:133;s:5:"    }";i:134;s:0:"";i:135;s:42:"    public function actionCellTemplate() {";i:136;s:53:"        $postdata = file_get_contents("php://input");";i:137;s:45:"        $post     = CJSON::decode($postdata);";i:138;s:54:"        $fb       = FormBuilder::load($post['class']);";i:139;s:62:"        $field    = $fb->findField(['name' => $post['name']]);";i:140;s:0:"";i:141;s:35:"        $this->attributes = $field;";i:142;s:70:"        $post['item']     = $this->processSingleColumn($post['item']);";i:143;s:64:"        echo $this->getRowTemplate($post['item'], $post['idx']);";i:144;s:5:"    }";i:145;s:0:"";i:146;s:48:"    public function getRowTemplate($col, $idx) {";i:147;s:24:"        $template  = '';";i:148;s:24:"        $style     = '';";i:149;s:34:"        $fieldName = $col['name'];";i:150;s:69:"        if ($fieldName == "" && !@$col['options']['mode']) return "";";i:151;s:0:"";i:152;s:24:"        $attr      = [];";i:153;s:46:"        if (isset($col['options']['ng-if'])) {";i:154;s:54:"            $attr['ng-if'] = $col['options']['ng-if'];";i:155;s:9:"        }";i:156;s:0:"";i:157;s:37:"        switch ($col['columnType']) {";i:158;s:26:"            case "string":";i:159;s:81:"                if (@$col['cellMode'] == 'custom' && trim(@$col['html']) != '') {";i:160;s:41:"                    return @$col['html'];";i:161;s:17:"                }";i:162;s:0:"";i:163;s:62:"                $template = '{{row[\'' . $fieldName . '\']}}';";i:164;s:22:"                break;";i:165;s:28:"            case "checkbox":";i:166;s:27:"                $ngif = "";";i:167;s:63:"                if (isset($col['options']['ng-checkbox-if'])) {";i:168;s:72:"                    $ngif = " && ({$col['options']['ng-checkbox-if']})";";i:169;s:17:"                }";i:170;s:16:"                ";i:171;s:29:"                $ngshow = "";";i:172;s:65:"                if (isset($col['options']['ng-checkbox-show'])) {";i:173;s:82:"                    $ngshow = "ng-show=\"{$col['options']['ng-checkbox-show']}\"";";i:174;s:17:"                }";i:175;s:16:"                ";i:176;s:58:"                if (isset($col['options']['ng-change'])) {";i:177;s:89:"                    $col['options']['ng-checkbox-change'] = $col['options']['ng-change'];";i:178;s:17:"                }";i:179;s:16:"                ";i:180;s:31:"                $ngchange = "";";i:181;s:67:"                if (isset($col['options']['ng-checkbox-change'])) {";i:182;s:75:"                    $ngchange = "{$col['options']['ng-checkbox-change']};";";i:183;s:17:"                }";i:184;s:16:"                ";i:185;s:33:"                $ngdisabled = "";";i:186;s:69:"                if (isset($col['options']['ng-checkbox-disabled'])) {";i:187;s:95:"                    $ngdisabled = "ng-disabled=\"{$col['options']['ng-checkbox-disabled']};\"";";i:188;s:17:"                }";i:189;s:16:"                ";i:190;s:134:"                $template = '<label class="cbl-'.$fieldName.'" ng-if="(row.$type == \'r\' || !row.$type) '.$ngif.'" '.$ngshow.'><input";i:191;s:87:"ng-click="checkboxRow(row, \'' . $fieldName . '\', ' . $idx . ', $event);'.$ngchange.'"";i:192;s:74:"ng-checked="checkboxRowChecked(row, \'' . $fieldName . '\', ' . $idx . ')"";i:193;s:15:"'.$ngdisabled.'";i:194;s:28:"type="checkbox" /></label>';";i:195;s:22:"                break;";i:196;s:9:"        }";i:197;s:0:"";i:198;s:23:"        $rowState = '';";i:199;s:24:"        if ($idx == 0) {";i:200;s:72:"            $rowStateCss = $this->hasEditable ? "class='editable'" : "";";i:201;s:118:"            if (@$this->gridOptions['showRowState'] != 'false' && @$this->gridOptions['showRowStateBtn'] != 'false') {";i:202;s:99:"                $rowState = "<div {$rowStateCss} ng-include='\"row-state-template\"'></div>\n    ";";i:203;s:13:"            }";i:204;s:80:"            if (!@$col['options']['mode'] && $col['columnType'] != 'checkbox') {";i:205;s:82:"                $template = "<span class='row-group-padding' ng-if='!!row.\$level'";i:206;s:51:"        style='width:{{row.\$level*10}}px;'></span>";i:207;s:17:"    {$template}";";i:208;s:13:"            }";i:209;s:9:"        }";i:210;s:0:"";i:211;s:0:"";i:212;s:23:"        $ngchange = '';";i:213;s:50:"        if (isset($col['options']['ng-change'])) {";i:214;s:77:"            $ngchange = ' ng-change="' . $col['options']['ng-change'] . '" ';";i:215;s:9:"        }";i:216;s:41:"        if (!!@$col['options']['mode']) {";i:217;s:30:"            $editableCss = '';";i:218;s:28:"            if ($idx == 0) {";i:219;s:79:"                $editableCss = 'style="padding-right: 0px;padding-left: 8px;"';";i:220;s:13:"            }";i:221;s:0:"";i:222;s:46:"            switch ($col['options']['mode']) {";i:223;s:28:"                case "html":";i:224;s:33:"                    $template = '";i:225;s:59:"    <div ng-bind-html="row[\'' . $fieldName . '\']></div>';";i:226;s:26:"                    break;";i:227;s:32:"                case "editable":";i:228;s:33:"                    $template = '";i:229;s:165:"    <div ceditable="true" ' . $editableCss . $ngchange . ' ng-paste="paste($event, row, $index, \''.$fieldName.'\', '.$idx.')" ng-model="row[\'' . $fieldName . '\']"";i:230;s:46:"         ng-keydown="editKey($event)"></div>';";i:231;s:26:"                    break;";i:232;s:39:"                case "editable-insert":";i:233;s:33:"                    $template = '";i:234;s:94:"    <div ceditable="true" ' . $editableCss . $ngchange . ' ng-if="row.$rowState == \'insert\'"";i:235;s:82:"         ng-model="row[\'' . $fieldName . '\'] ng-keydown="editKey($event)"></div>";i:236;s:74:"    <span ng-show="row.$rowState != \'insert\'">' . $template . '</span>';";i:237;s:26:"                    break;";i:238;s:39:"                case "editable-update":";i:239;s:33:"                    $template = '";i:240;s:94:"    <div ceditable="true" ' . $editableCss . $ngchange . ' ng-if="row.$rowState != \'insert\'"";i:241;s:82:"         ng-model="row[\'' . $fieldName . '\'] ng-keydown="editKey($event)"></div>";i:242;s:74:"    <span ng-show="row.$rowState == \'insert\'">' . $template . '</span>';";i:243;s:26:"                    break;";i:244;s:34:"                case "del-button":";i:245;s:60:"                    if (!isset($col['options']['delUrl'])) {";i:246;s:59:"                        $style    = ' style="width:20px;"';";i:247;s:106:"                        $template = '<div ng-if="!row.$rowState" ng-click="removeRow(row)" title="Remove" ";i:248;s:67:"    class="btn btn-danger btn-xs"><i class="fa fa-trash"></i></div>";i:249;s:0:"";i:250;s:156:"    <div ng-if="(!row.$type || row.$type === \'r\') && [\'edit\',\'remove\'].indexOf(row.$rowState) >= 0" ng-click="undoRemoveRow(row)" title="Undo Remove" ";i:251;s:74:"         class="btn btn-default btn-xs"><i class="fa fa-undo"></i></div>';";i:252;s:28:"                    } else {";i:253;s:59:"                        $style    = ' style="width:20px;"';";i:254;s:126:"                        $template = '<a ng-if="(!row.$type || row.$type === \'r\')" ng-url="' . $col['options']['delUrl'] . '"";i:255;s:47:"    onClick="return confirm(\'Are you sure?\')"";i:256;s:77:"    class="btn-block btn btn-danger btn-xs"><i class="fa fa-trash"></i></a>';";i:257;s:21:"                    }";i:258;s:26:"                    break;";i:259;s:39:"                case "unchoose-button":";i:260;s:55:"                    $style    = ' style="width:20px;"';";i:261;s:158:"                    $template = '<div ng-if="(!row.$type || row.$type === \'r\') && (!row.$rowState || row.$rowState == \'insert\')" ng-click="removeRow(row)"";i:262;s:67:"    class="btn btn-danger btn-xs"><i class="fa fa-times"></i></div>";i:263;s:0:"";i:264;s:102:"    <div ng-if="[\'remove\'].indexOf(row.$rowState) >= 0" ng-click="undoRemoveRow(row)" title="Remove"";i:265;s:67:"    class="btn btn-default btn-xs"><i class="fa fa-undo"></i></div>";i:266;s:6:"    ';";i:267;s:26:"                    break;";i:268;s:41:"                case 'edit-popup-button':";i:269;s:55:"                    $style    = ' style="width:20px;"';";i:270;s:82:"                    $template = '<a ng-if="row.$rowState != \'insert\'" ng-click="";i:271;s:69:"'.$col['options']['popupName'].'.editId = row[datasource.primaryKey];";i:272;s:44:"' . $col['options']['popupName'] . '.open()"";i:273;s:76:"    class="btn-block btn btn-info btn-xs"><i class="fa fa-pencil"></i></a>';";i:274;s:26:"                    break;";i:275;s:35:"                case 'edit-button':";i:276;s:55:"                    $style    = ' style="width:20px;"';";i:277;s:139:"                    $template = '<a ng-if="(!row.$type || row.$type === \'r\')" ng-url="' . $col['options']['editUrl'] . '" title="Update" ";i:278;s:76:"    class="btn-block btn btn-info btn-xs"><i class="fa fa-pencil"></i></a>';";i:279;s:26:"                    break;";i:280;s:32:"                case 'sequence':";i:281;s:55:"                    $style    = ' style="width:20px;"';";i:282;s:70:"                    $template = '{{ getSequence(row, $index + 1); }}';";i:283;s:26:"                    break;";i:284;s:28:"                case 'date':";i:285;s:87:"                    $template = '{{row[\'' . $fieldName . '\'] | dateFormat:"date" }}';";i:286;s:26:"                    break;";i:287;s:28:"                case 'time':";i:288;s:87:"                    $template = '{{row[\'' . $fieldName . '\'] | dateFormat:"time" }}';";i:289;s:26:"                    break;";i:290;s:32:"                case 'datetime':";i:291;s:91:"                    $template = '{{row[\'' . $fieldName . '\'] | dateFormat:"datetime" }}';";i:292;s:26:"                    break;";i:293;s:13:"            }";i:294;s:9:"        }";i:295;s:8:"        ";i:296;s:39:"        $width = $this->getWidth($col);";i:297;s:27:"        if ($width != '') {";i:298;s:36:"            $attr['style'] = $width;";i:299;s:9:"        }";i:300;s:8:"        ";i:301;s:30:"        if (is_array($attr)) {";i:302;s:51:"            $attr = $this->expandAttributes($attr);";i:303;s:9:"        }";i:304;s:0:"";i:305;s:21:"        return <<<EOF";i:306;s:85:"<td{$style} ng-class="rowClass(row, '{$fieldName}', '{$col['columnType']}')" {$attr}>";i:307;s:26:"    {$rowState}{$template}";i:308;s:5:"</td>";i:309;s:4:"EOF;";i:310;s:5:"    }";i:311;s:0:"";i:312;s:47:"    private function getStartingColumnGroup() {";i:313;s:46:"        foreach ($this->columns as $k => $c) {";i:314;s:56:"            if ($c['columnType'] == 'string') return $k;";i:315;s:9:"        }";i:316;s:5:"    }";i:317;s:0:"";i:318;s:50:"    public function getGroupTemplate($col, $idx) {";i:319;s:23:"        $template = '';";i:320;s:37:"        switch ($col['columnType']) {";i:321;s:26:"            case "string":";i:322;s:98:"                $template = '<td style="cursor:pointer;" ng-click="hideGroup(row, $event)"></td>';";i:323;s:22:"                break;";i:324;s:16:"            case";i:325;s:23:"            "checkbox":";i:326;s:34:"                $template = <<<EOF";i:327;s:90:"<td class="t-{$col['columnType']}"><label><input type="checkbox" class="cb-{$col['name']}"";i:328;s:84:"ng-click="checkboxGroup(\$index, '{$col['name']}', '$idx', \$event)" /></label></td>";i:329;s:4:"EOF;";i:330;s:22:"                break;";i:331;s:9:"        }";i:332;s:0:"";i:333;s:24:"        $attr      = [];";i:334;s:46:"        if (isset($col['options']['ng-if'])) {";i:335;s:54:"            $attr['ng-if'] = $col['options']['ng-if'];";i:336;s:9:"        }";i:337;s:46:"        $width = $this->getWidth($col, false);";i:338;s:27:"        if ($width != '') {";i:339;s:36:"            $attr['style'] = $width;";i:340;s:9:"        }";i:341;s:30:"        if (is_array($attr)) {";i:342;s:51:"            $attr = $this->expandAttributes($attr);";i:343;s:9:"        }";i:344;s:0:"";i:345;s:54:"        if ($idx == $this->getStartingColumnGroup()) {";i:346;s:25:"            $template = '";i:347;s:85:"<td class="t-' . $col['columnType'] . '" ng-click="hideGroup(row, $event)" '.$attr.'>";i:348;s:276:"    <div class="row-g" style="white-space:pre;cursor:pointer;"><span style="display:inline-block;width:{{row.$level*10}}px;float:"></span><i ng-if="!row.$hide" class="fa fa-caret-down"></i><i ng-if="!!row.$hide" class="fa fa-caret-right"></i>&nbsp; {{ row[row.$group] }}</div>";i:349;s:5:"</td>";i:350;s:2:"';";i:351;s:9:"        }";i:352;s:25:"        return $template;";i:353;s:5:"    }";i:354;s:0:"";i:355;s:59:"    public function generateHeaders($mode, $cols = false) {";i:356;s:105:"        $rowHeaders = isset($this->gridOptions['rowHeaders']) ? $this->gridOptions['rowHeaders'] * 1: 1; ";i:357;s:48:"        $cols = !$cols ? $this->columns : $cols;";i:358;s:22:"        $rowSpan = [];";i:359;s:19:"        ob_start();";i:360;s:45:"        for($i = $rowHeaders; $i >=1; $i--) {";i:361;s:66:"            echo ($mode== 'class' ? '<div class="tr">' : '<tr>'); ";i:362;s:45:"            foreach ($cols as $idx => $col) {";i:363;s:55:"                if (@$col['headers']['hide'] == true) {";i:364;s:29:"                    continue;";i:365;s:17:"                }";i:366;s:64:"                if (@$col['headers']['r' . $i]['rowSpan'] > 1) {";i:367;s:74:"                    $rowSpan[$idx] = ['current'=>$i,'total'=>$rowHeaders];";i:368;s:17:"                }";i:369;s:44:"                if (isset($rowSpan[$idx])) {";i:370;s:53:"                    $col['rowSpan'] = $rowSpan[$idx];";i:371;s:17:"                }";i:372;s:16:"                ";i:373;s:64:"                $cidx = isset($col['idx']) ? $col['idx'] : $idx;";i:374;s:30:"                if ($i == 1) {";i:375;s:64:"                    if (@$col['headers']['r1']['colSpan'] > 1) {";i:376;s:83:"                        echo $this->getSuperHeaderTemplate($i, $col, $cidx, $mode);";i:377;s:28:"                    } else {";i:378;s:74:"                        echo $this->getHeaderTemplate($col, $cidx, $mode);";i:379;s:21:"                    }";i:380;s:24:"                } else {";i:381;s:79:"                    echo $this->getSuperHeaderTemplate($i, $col, $cidx, $mode);";i:382;s:17:"                }";i:383;s:13:"            }";i:384;s:57:"            echo ($mode == 'class' ? '</div>' : '</tr>');";i:385;s:9:"        }";i:386;s:30:"        return ob_get_clean();";i:387;s:5:"    }";i:388;s:4:"    ";i:389;s:38:"    public function getFreezedCols() {";i:390;s:19:"        $cols = [];";i:391;s:48:"        foreach ($this->columns as $idx=>$col) {";i:392;s:55:"            if (@$col['options']['freeze'] == 'true') {";i:393;s:35:"                $col['idx'] = $idx;";i:394;s:31:"                $cols[] = $col;";i:395;s:13:"            }";i:396;s:9:"        }";i:397;s:21:"        return $cols;";i:398;s:5:"    }";i:399;s:4:"    ";i:400;s:55:"    private function getWidth($col, $overflow = true) {";i:401;s:46:"        if (@$col['options']['width'] != "") {";i:402;s:64:"            $style = 'width:' .$col['options']['width'] . 'px;';";i:403;s:69:"            $style .= 'min-width:' .$col['options']['width'] . 'px;';";i:404;s:69:"            $style .= 'max-width:' .$col['options']['width'] . 'px;';";i:405;s:28:"            if ($overflow) {";i:406;s:48:"                $style .= 'overflow-x: hidden;';";i:407;s:13:"            }";i:408;s:26:"            return $style;";i:409;s:9:"        }";i:410;s:8:"        ";i:411;s:18:"        return '';";i:412;s:5:"    }";i:413;s:4:"    ";i:414;s:69:"    public function getSuperHeaderTemplate($row, $col, $idx, $mode) {";i:415;s:24:"        $attr      = [];";i:416;s:29:"        $attr['cidx'] = $idx;";i:417;s:29:"        $attr['ridx'] = $row;";i:418;s:8:"        ";i:419;s:46:"        if (isset($col['options']['ng-if'])) {";i:420;s:54:"            $attr['ng-if'] = $col['options']['ng-if'];";i:421;s:9:"        }";i:422;s:8:"        ";i:423;s:52:"        if (@$col['options']['freeze'] === 'true') {";i:424;s:37:"            $attr['freeze'] = 'true';";i:425;s:9:"        }";i:426;s:8:"        ";i:427;s:38:"        if (!isset($col['headers'])) {";i:428;s:33:"            $col['headers'] = [];";i:429;s:9:"        }";i:430;s:8:"        ";i:431;s:49:"        if (!isset($col['headers']['r'. $row])) {";i:432;s:42:"            $col['headers']['r'. $row] = [";i:433;s:30:"                'label' => '',";i:434;s:32:"                'colSpan' => '1'";i:435;s:14:"            ];";i:436;s:9:"        }";i:437;s:8:"        ";i:438;s:46:"        $headers = $col['headers']['r'. $row];";i:439;s:39:"        $width = $this->getWidth($col);";i:440;s:27:"        if ($width != '') {";i:441;s:36:"            $attr['style'] = $width;";i:442;s:9:"        }";i:443;s:8:"        ";i:444;s:37:"        if (isset($col['rowSpan'])) {";i:445;s:53:"            if ($col['rowSpan']['current'] == $row) {";i:446;s:60:"                $attr['rowspan'] = $col['rowSpan']['total'];";i:447;s:20:"            } else {";i:448;s:26:"                return "";";i:449;s:13:"            }";i:450;s:9:"        }";i:451;s:8:"        ";i:452;s:38:"        if ($headers['colSpan'] < 1) {";i:453;s:22:"            return "";";i:454;s:45:"        } else if ($headers['colSpan'] > 1) {";i:455;s:52:"            $attr['colspan'] = $headers['colSpan']; ";i:456;s:9:"        }";i:457;s:30:"        if (is_array($attr)) {";i:458;s:51:"            $attr = $this->expandAttributes($attr);";i:459;s:9:"        }";i:460;s:8:"        ";i:461;s:23:"        if ($row > 1) {";i:462;s:41:"            $content = $headers['label'];";i:463;s:16:"        } else {";i:464;s:37:"            $content = $col['label'];";i:465;s:9:"        }";i:466;s:31:"        if ($mode == 'class') {";i:467;s:25:"            return <<<EOL";i:468;s:24:"<div class="th" {$attr}>";i:469;s:10:"{$content}";i:470;s:6:"</div>";i:471;s:4:"EOL;";i:472;s:16:"        } else {";i:473;s:25:"            return <<<EOL";i:474;s:12:"<th {$attr}>";i:475;s:10:"{$content}";i:476;s:5:"</th>";i:477;s:4:"EOL;";i:478;s:9:"        }";i:479;s:5:"    }";i:480;s:0:"";i:481;s:59:"    public function getHeaderTemplate(&$col, $idx, $mode) {";i:482;s:81:"        $fieldName = isset($col['fieldName']) ? $col['fieldName'] : $col['name'];";i:483;s:69:"        if ($fieldName == "" && !@$col['options']['mode']) return "";";i:484;s:0:"";i:485;s:24:"        $attr      = [];";i:486;s:29:"        $attr['cidx'] = $idx;";i:487;s:26:"        $attr['ridx'] = 1;";i:488;s:46:"        if (@$col['options']['ng-if'] != "") {";i:489;s:54:"            $attr['ng-if'] = $col['options']['ng-if'];";i:490;s:9:"        }";i:491;s:8:"        ";i:492;s:52:"        if (@$col['options']['freeze'] === 'true') {";i:493;s:37:"            $attr['freeze'] = 'true';";i:494;s:9:"        }";i:495;s:8:"        ";i:496;s:39:"        $width = $this->getWidth($col);";i:497;s:27:"        if ($width != '') {";i:498;s:36:"            $attr['style'] = $width;";i:499;s:9:"        }";i:500;s:8:"        ";i:501;s:37:"        if (isset($col['rowSpan'])) {";i:502;s:22:"            return "";";i:503;s:9:"        }";i:504;s:8:"        ";i:505;s:30:"        if (is_array($attr)) {";i:506;s:51:"            $attr = $this->expandAttributes($attr);";i:507;s:9:"        }";i:508;s:8:"        ";i:509;s:8:"        ";i:510;s:37:"        switch ($col['columnType']) {";i:511;s:26:"            case "string":";i:512;s:64:"                $sortable = "ng-click=\"sort('{$fieldName}')\"";";i:513;s:34:"                $caret    = <<<EOF";i:514;s:76:"        <i class="fa fa-caret-up" ng-if="isSort('{$fieldName}', 'asc')"></i>";i:515;s:79:"        <i class="fa fa-caret-down" ng-if="isSort('{$fieldName}', 'desc')"></i>";i:516;s:4:"EOF;";i:517;s:0:"";i:518;s:126:"                if (isset($col['options']) && isset($col['options']['sortable']) && $col['options']['sortable'] === 'false') {";i:519;s:35:"                    $sortable = '';";i:520;s:35:"                    $caret    = '';";i:521;s:17:"                }";i:522;s:0:"";i:523;s:34:"                 $content = <<<EOF";i:524;s:40:"    <div class="row-header" {$sortable}>";i:525;s:23:"        {$col['label']}";i:526;s:16:"        {$caret}";i:527;s:10:"    </div>";i:528;s:4:"EOF;";i:529;s:22:"                break;";i:530;s:28:"            case "checkbox":";i:531;s:27:"                $ngif = "";";i:532;s:68:"                if (isset($col['options']['ng-checkbox-head-if'])) {";i:533;s:83:"                    $ngif = "ng-if=\"({$col['options']['ng-checkbox-head-if']})\"";";i:534;s:17:"                }";i:535;s:16:"                ";i:536;s:34:"                $content =  <<<EOL";i:537;s:41:"    <label {$ngif}><input type="checkbox"";i:538;s:98:"ng-click="checkboxAll('{$col['name']}','{$idx}', \$event)" class="cb-th-{$col['name']}" /></label>";i:539;s:4:"EOL;";i:540;s:0:"";i:541;s:16:"                ";i:542;s:22:"                break;";i:543;s:9:"        }";i:544;s:8:"        ";i:545;s:39:"        if (isset($col['labelHtml'])) {";i:546;s:41:"            $content = $col['labelHtml'];";i:547;s:16:"        } else {";i:548;s:44:"            // $col['labelHtml'] = $content;";i:549;s:9:"        }";i:550;s:8:"        ";i:551;s:31:"        if ($mode == 'class') {";i:552;s:25:"            return <<<EOL";i:553;s:24:"<div class="th" {$attr}>";i:554;s:10:"{$content}";i:555;s:6:"</div>";i:556;s:4:"EOL;";i:557;s:16:"        } else {";i:558;s:25:"            return <<<EOL";i:559;s:12:"<th {$attr}>";i:560;s:10:"{$content}";i:561;s:5:"</th>";i:562;s:4:"EOL;";i:563;s:9:"        }";i:564;s:8:"        ";i:565;s:5:"    }";i:566;s:0:"";i:567;s:42:"    public function getFieldProperties() {";i:568;s:22:"        return array (";i:569;s:19:"            array (";i:570;s:43:"                'label' => 'GridView Name',";i:571;s:33:"                'name' => 'name',";i:572;s:36:"                'labelWidth' => '5',";i:573;s:36:"                'fieldWidth' => '7',";i:574;s:36:"                'options' => array (";i:575;s:48:"                    'ng-model' => 'active.name',";i:576;s:44:"                    'ng-change' => 'save()',";i:577;s:40:"                    'ng-delay' => '500',";i:578;s:18:"                ),";i:579;s:38:"                'type' => 'TextField',";i:580;s:14:"            ),";i:581;s:19:"            array (";i:582;s:46:"                'label' => 'Data Source Name',";i:583;s:39:"                'name' => 'datasource',";i:584;s:36:"                'options' => array (";i:585;s:54:"                    'ng-model' => 'active.datasource',";i:586;s:44:"                    'ng-change' => 'save()',";i:587;s:40:"                    'ng-delay' => '500',";i:588;s:50:"                    'ps-list' => 'dataSourceList',";i:589;s:18:"                ),";i:590;s:36:"                'labelWidth' => '5',";i:591;s:36:"                'fieldWidth' => '7',";i:592;s:41:"                'type' => 'DropDownList',";i:593;s:14:"            ),";i:594;s:19:"            array (";i:595;s:33:"                'type' => 'Text',";i:596;s:60:"                'value' => '<div class=\'clearfix\'></div>',";i:597;s:14:"            ),";i:598;s:19:"            array (";i:599;s:42:"                'label' => 'Grid Options',";i:600;s:40:"                'name' => 'gridOptions',";i:601;s:41:"                'type' => 'KeyValueGrid',";i:602;s:14:"            ),";i:603;s:19:"            array (";i:604;s:55:"                'label' => 'Container Element Options',";i:605;s:36:"                'name' => 'options',";i:606;s:41:"                'type' => 'KeyValueGrid',";i:607;s:14:"            ),";i:608;s:19:"            array (";i:609;s:51:"                'label' => 'Table Element Options',";i:610;s:41:"                'name' => 'tableOptions',";i:611;s:41:"                'type' => 'KeyValueGrid',";i:612;s:14:"            ),";i:613;s:19:"            array (";i:614;s:46:"                'label' => 'Columns Function',";i:615;s:45:"                'fieldname' => 'columnsFunc',";i:616;s:79:"                'desc' => 'Use $columns and $data to get columns and data.<br/>";i:617;s:51:" e.g: YourClass::function($columns, $params, $data)";i:618;s:10:"<br/><br/>";i:619;s:59:"NOTE: to use $data, you must set \'cache\' = \'true\' <br/>";i:620;s:28:"in your DataSource Options',";i:621;s:44:"                'type' => 'ExpressionField',";i:622;s:14:"            ),";i:623;s:19:"            array (";i:624;s:53:"                'label' => 'Columns Function Params',";i:625;s:46:"                'name' => 'columnsFuncParams',";i:626;s:36:"                'options' => array (";i:627;s:54:"                    'ng-if' => '!!active.columnsFunc',";i:628;s:18:"                ),";i:629;s:41:"                'type' => 'KeyValueGrid',";i:630;s:14:"            ),";i:631;s:19:"            array (";i:632;s:36:"                'title' => 'Header',";i:633;s:42:"                'type' => 'SectionHeader',";i:634;s:14:"            ),";i:635;s:19:"            array (";i:636;s:33:"                'type' => 'Text',";i:637;s:65:"                'value' => '<div ng-click=\"headerPopUp.open()\" ";i:638;s:31:"     style=\'margin-top:-25px\'";i:639;s:46:"     class=\"btn btn-xs pull-right btn-info\">";i:640;s:53:"    <b><i class=\"fa fa-pencil\"></i> Edit Header</b>";i:641;s:8:"</div>',";i:642;s:14:"            ),";i:643;s:19:"            array (";i:644;s:40:"                'type' => 'PopupWindow',";i:645;s:40:"                'name' => 'headerPopUp',";i:646;s:36:"                'options' => array (";i:647;s:37:"                    'width' => '800',";i:648;s:38:"                    'height' => '400',";i:649;s:18:"                ),";i:650;s:32:"                'mode' => 'url',";i:651;s:83:"                'subForm' => 'application.components.ui.FormFields.GridViewHeader',";i:652;s:58:"                'url' => '/formfield/GridView.editHeader',";i:653;s:53:"                'title' => 'GridView Header Setting',";i:654;s:80:"                'parentForm' => 'application.components.ui.FormFields.GridView',";i:655;s:14:"            ),";i:656;s:19:"            array (";i:657;s:37:"                'title' => 'Columns',";i:658;s:42:"                'type' => 'SectionHeader',";i:659;s:14:"            ),";i:660;s:19:"            array (";i:661;s:46:"                'label' => 'Generate Columns',";i:662;s:42:"                'buttonType' => 'success',";i:663;s:34:"                'icon' => 'magic',";i:664;s:41:"                'buttonSize' => 'btn-xs',";i:665;s:36:"                'options' => array (";i:666;s:71:"                    'style' => 'float:right;margin:-25px 0px 0px 0px;',";i:667;s:61:"                    'ng-show' => 'active.datasource != \'\'',";i:668;s:54:"                    'ng-click' => 'generateColumns()',";i:669;s:18:"                ),";i:670;s:39:"                'type' => 'LinkButton',";i:671;s:14:"            ),";i:672;s:19:"            array (";i:673;s:33:"                'type' => 'Text',";i:674;s:66:"                'value' => '<div style=\'margin-top:5px\'></div>',";i:675;s:14:"            ),";i:676;s:19:"            array (";i:677;s:36:"                'name' => 'columns',";i:678;s:42:"                'fieldTemplate' => 'form',";i:679;s:85:"                'templateForm' => 'application.components.ui.FormFields.GridViewCol',";i:680;s:57:"                'inlineJS' => 'GridView/grid-builder.js',";i:681;s:36:"                'options' => array (";i:682;s:51:"                    'ng-model' => 'active.columns',";i:683;s:44:"                    'ng-change' => 'save()',";i:684;s:18:"                ),";i:685;s:45:"                'singleViewOption' => array (";i:686;s:36:"                    'name' => 'val',";i:687;s:42:"                    'fieldType' => 'text',";i:688;s:38:"                    'labelWidth' => 0,";i:689;s:39:"                    'fieldWidth' => 12,";i:690;s:45:"                    'fieldOptions' => array (";i:691;s:42:"                        'ng-delay' => 500,";i:692;s:22:"                    ),";i:693;s:18:"                ),";i:694;s:37:"                'type' => 'ListView',";i:695;s:14:"            ),";i:696;s:10:"        );";i:697;s:5:"    }";i:698;s:0:"";i:699;s:1:"}";}s:7:"methods";a:20:{s:19:"actionDownloadExcel";a:2:{s:4:"line";i:26;s:6:"length";i:18;}s:14:"actionTemplate";a:2:{s:4:"line";i:45;s:6:"length";i:7;}s:16:"actionEditHeader";a:2:{s:4:"line";i:53;s:6:"length";i:6;}s:13:"getErrorClass";a:2:{s:4:"line";i:60;s:6:"length";i:3;}s:10:"includeCSS";a:2:{s:4:"line";i:64;s:6:"length";i:3;}s:9:"includeJS";a:2:{s:4:"line";i:68;s:6:"length";i:3;}s:13:"prepareRender";a:2:{s:4:"line";i:72;s:6:"length";i:35;}s:6:"render";a:2:{s:4:"line";i:108;s:6:"length";i:4;}s:14:"processColumns";a:2:{s:4:"line";i:113;s:6:"length";i:5;}s:19:"processSingleColumn";a:2:{s:4:"line";i:119;s:6:"length";i:15;}s:18:"actionCellTemplate";a:2:{s:4:"line";i:135;s:6:"length";i:10;}s:14:"getRowTemplate";a:2:{s:4:"line";i:146;s:6:"length";i:165;}s:22:"getStartingColumnGroup";a:2:{s:4:"line";i:312;s:6:"length";i:5;}s:16:"getGroupTemplate";a:2:{s:4:"line";i:318;s:6:"length";i:36;}s:15:"generateHeaders";a:2:{s:4:"line";i:355;s:6:"length";i:33;}s:14:"getFreezedCols";a:2:{s:4:"line";i:389;s:6:"length";i:10;}s:8:"getWidth";a:2:{s:4:"line";i:400;s:6:"length";i:13;}s:22:"getSuperHeaderTemplate";a:2:{s:4:"line";i:414;s:6:"length";i:66;}s:17:"getHeaderTemplate";a:2:{s:4:"line";i:481;s:6:"length";i:85;}s:18:"getFieldProperties";a:2:{s:4:"line";i:567;s:6:"length";i:131;}}}i:1;N;}